name: XYZ.Core

env:
  dotnet_version: '8.x' 
  gitversion_version: '6.x'
  packages_source: https://nuget.pkg.github.com/username/index.json
  packages_personal_access_token: ${{ secrets.PACKAGES_PERSONAL_ACCESS_TOKEN }}
  environment: production

on:
  push:
    branches: [ 521-secrets.GITHUB_TOKEN ]

permissions: write-all
 
jobs:

  setup:

    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.versioning.outputs.semVer }}

    name: setup

    steps: 

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.dotnet_version }}
 
      - name: GitVersion
        uses: gittools/actions/gitversion/setup@v1
        with:
          versionSpec: ${{ env.gitversion_version }}
          includePrerelease: true

      - name: Versioning
        uses: gittools/actions/gitversion/execute@v1
        id: versioning
        with:
          useConfigFile: true
          configFilePath: gitversion.yml
          
  build:

    runs-on: ubuntu-latest
    needs: [ setup ]

    strategy:
      matrix:
        project: ['XYZ.Core', 'XYZ.Core.Web']

    name: build ${{ matrix.project }}

    steps:
    
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        run:  dotnet build src/${{ matrix.project }} --configuration ${{ env.environment }} -p:Version=${{ needs.setup.outputs.version }}
  
  test:

    runs-on: ubuntu-latest
    needs: [ setup, build ]

    strategy:
      matrix:
        project: ['XYZ.Core', 'XYZ.Core.Web']

    name: test ${{ matrix.project }}

    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Test
        run: dotnet test test/${{ matrix.project }}.Test --configuration ${{ env.environment }} -p:Version=${{ needs.setup.outputs.version }}

  pack:

    runs-on: ubuntu-latest
    needs: [ setup, build, test ]

    strategy:
      matrix:
        project: ['XYZ.Core', 'XYZ.Core.Web']

    name: pack ${{ matrix.project }}

    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Pack
        run: 
          dotnet pack src/${{ matrix.project }} --configuration ${{ env.environment }} --output ${{ github.workspace }} -p:PackageVersion=${{ needs.setup.outputs.version }}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.project }}
          path: ${{ github.workspace }}/${{ matrix.project }}*.nupkg
          if-no-files-found: error
          retention-days: 2

  deploy:

    runs-on: ubuntu-latest
    needs: [ setup, build, test, pack ]

    strategy:
      matrix:
        project: ['XYZ.Core', 'XYZ.Core.Web']

    name: deploy ${{ matrix.project }}

    steps:

      - name: Download
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.project }}
          path: ${{ github.workspace }}

      - name: Publish
        run: dotnet nuget push ${{ github.workspace }}/${{ matrix.project }}.${{ needs.setup.outputs.version }}.nupkg --source ${{ env.packages_source }} --api-key ${{ env.packages_personal_access_token }} --skip-duplicate --no-symbols